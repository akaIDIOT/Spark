#!/usr/bin/env python

import argparse, shlex, sys
from spark import spark

# create an argument parser for command line arguments
parser = argparse.ArgumentParser(description = 'Graph numerical data as an ascii graph')
parser.add_argument('--min', default = None, type = float, help = 'lower value bound', dest = 'min')
parser.add_argument('--max', default = None, type = float, help = 'upper value bound', dest = 'max')
parser.add_argument('--lines', default = 1, type = int, help = 'the number of lines to format the spark to', dest = 'lines')
parser.add_argument('data', nargs = '*', type = float, help = 'data to graph', metavar = 'VALUE')
# collect arguments in args
args = parser.parse_args()

# override args.data if no data specified
if not args.data and not sys.stdin.isatty():
	# read a line from stdin, treat is as arguments when we're being piped / redirected
	args.data = shlex.split(sys.stdin.readline())

# print the spark
print spark(map(float, args.data), vrange = (args.min, args.max), lines = args.lines)

